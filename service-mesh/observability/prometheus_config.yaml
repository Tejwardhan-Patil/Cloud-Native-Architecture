global:
  scrape_interval: 15s
  evaluation_interval: 15s
  scrape_timeout: 10s
  external_labels:
    monitor: 'service-mesh-monitor'

scrape_configs:
  - job_name: 'service-a'
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets:
        - service-a:8080
        labels:
          group: 'service-a'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'service-a-instance'

  - job_name: 'service-b'
    metrics_path: /metrics
    scheme: http
    static_configs:
      - targets:
        - service-b:8080
        labels:
          group: 'service-b'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'service-b-instance'

  - job_name: 'istio-mesh'
    metrics_path: /metrics
    scheme: https
    static_configs:
      - targets:
        - istio-pilot:15014
        - istio-telemetry:15090
        - istio-ingressgateway:15020
        labels:
          group: 'istio-system'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'istio-instance'

  - job_name: 'envoy'
    metrics_path: /stats/prometheus
    static_configs:
      - targets:
        - envoy-sidecar:15000
        labels:
          instance: 'envoy-sidecar'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'envoy-instance'

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    relabel_configs:
      - source_labels: [__address__]
        action: replace
        target_label: __address__
        regex: '(.+):10250'
        replacement: '${1}:9100'

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace]
        action: keep
        regex: 'default|service-a|service-b'

  - job_name: 'prometheus'
    metrics_path: /metrics
    static_configs:
      - targets: ['localhost:9090']
    honor_labels: true

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

rule_files:
  - "/prometheus/rules.yml"

remote_write:
  - url: "https://remote.prometheus.io/write"
    basic_auth:
      username: 'user'
      password: 'password'

remote_read:
  - url: "https://remote.prometheus.io/read"
    basic_auth:
      username: 'user'
      password: 'password'

# Extended Alert Rules

groups:
  - name: service-a-alerts
    rules:
      - alert: HighLatencyServiceA
        expr: avg_over_time(http_request_duration_seconds{job="service-a"}[5m]) > 1
        for: 10m
        labels:
          severity: 'critical'
        annotations:
          summary: 'High Latency in Service A'
          description: 'Service A latency exceeds 1 second for more than 10 minutes.'

      - alert: ServiceADown
        expr: up{job="service-a"} == 0
        for: 5m
        labels:
          severity: 'critical'
        annotations:
          summary: 'Service A Down'
          description: 'Service A is unreachable for more than 5 minutes.'

      - alert: HighMemoryUsageServiceA
        expr: container_memory_usage_bytes{job="service-a"} > 0.9 * container_spec_memory_limit_bytes
        for: 5m
        labels:
          severity: 'warning'
        annotations:
          summary: 'High Memory Usage in Service A'
          description: 'Memory usage in Service A exceeds 90% of the allocated memory for 5 minutes.'

  - name: service-b-alerts
    rules:
      - alert: HighLatencyServiceB
        expr: avg_over_time(http_request_duration_seconds{job="service-b"}[5m]) > 1
        for: 10m
        labels:
          severity: 'critical'
        annotations:
          summary: 'High Latency in Service B'
          description: 'Service B latency exceeds 1 second for more than 10 minutes.'

      - alert: ServiceBDown
        expr: up{job="service-b"} == 0
        for: 5m
        labels:
          severity: 'critical'
        annotations:
          summary: 'Service B Down'
          description: 'Service B is unreachable for more than 5 minutes.'

      - alert: HighMemoryUsageServiceB
        expr: container_memory_usage_bytes{job="service-b"} > 0.9 * container_spec_memory_limit_bytes
        for: 5m
        labels:
          severity: 'warning'
        annotations:
          summary: 'High Memory Usage in Service B'
          description: 'Memory usage in Service B exceeds 90% of the allocated memory for 5 minutes.'

  - name: general-alerts
    rules:
      - alert: NodeDiskFull
        expr: (node_filesystem_avail_bytes{fstype!="tmpfs",mountpoint="/"} / node_filesystem_size_bytes{fstype!="tmpfs",mountpoint="/"}) < 0.15
        for: 10m
        labels:
          severity: 'warning'
        annotations:
          summary: 'Node Disk Space Running Low'
          description: 'Node has less than 15% disk space available for more than 10 minutes.'

      - alert: PodCrashLooping
        expr: kube_pod_container_status_restarts_total > 5
        for: 5m
        labels:
          severity: 'warning'
        annotations:
          summary: 'Pod CrashLoopBackOff'
          description: 'Pod has restarted more than 5 times in the last 5 minutes.'

      - alert: HighCPUThrottling
        expr: sum(rate(container_cpu_cfs_throttled_seconds_total[1m])) by (pod_name) > 0.05
        for: 10m
        labels:
          severity: 'critical'
        annotations:
          summary: 'High CPU Throttling Detected'
          description: 'A pod is experiencing CPU throttling above the threshold for more than 10 minutes.'

# Relabeling Rules for Namespace Specific Scrapes

relabel_configs:
  - source_labels: [job, __meta_kubernetes_namespace]
    action: keep
    regex: 'service-a|service-b'

  - source_labels: [__meta_kubernetes_service_name]
    action: keep
    regex: 'service-a|service-b'

# Istio Detailed Monitoring

  - job_name: 'istio-mesh-detailed'
    metrics_path: /metrics
    static_configs:
      - targets:
        - istio-ingressgateway:15020
        - istio-telemetry:15090
        labels:
          group: 'istio-system-detailed'

# Scrape Job for Envoy Proxies

  - job_name: 'envoy-proxy'
    metrics_path: /stats/prometheus
    static_configs:
      - targets:
        - envoy-proxy:15000
        labels:
          instance: 'envoy-proxy-instance'

# Node Exporter Configuration

  - job_name: 'node-exporter'
    static_configs:
      - targets:
        - node-exporter-1:9100
        - node-exporter-2:9100
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'node-exporter-instance'

# Prometheus Self-Monitoring

  - job_name: 'prometheus-self'
    metrics_path: /metrics
    static_configs:
      - targets: ['localhost:9090']
    honor_labels: true
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'prometheus-instance'