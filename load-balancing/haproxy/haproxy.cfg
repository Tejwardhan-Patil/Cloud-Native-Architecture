#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    pidfile /var/run/haproxy.pid
    maxconn 50000
    user haproxy
    group haproxy
    daemon
    stats socket /var/run/haproxy.sock mode 660 level admin
    ssl-default-bind-options no-sslv3
    ssl-default-bind-ciphers AES256+EECDH:AES256+EDH:!aNULL

#---------------------------------------------------------------------
# Defaults settings
#---------------------------------------------------------------------
defaults
    log     global
    option  httplog
    option  dontlognull
    option  redispatch
    retries 3
    timeout http-request 10s
    timeout queue 1m
    timeout connect 10s
    timeout client 30s
    timeout server 30s
    timeout http-keep-alive 10s
    timeout check 10s
    maxconn 3000

#---------------------------------------------------------------------
# Frontend for HTTP traffic
#---------------------------------------------------------------------
frontend http-in
    bind *:80
    mode http
    log global
    option httplog
    option forwardfor
    default_backend web-servers

    # ACL for redirecting traffic based on path or host
    acl is_api_path path_beg /api
    acl is_static_path path_beg /static
    acl is_secure hdr_sub(Host) -i secure.website.com

    # Conditional routing based on ACLs
    use_backend api-servers if is_api_path
    use_backend static-servers if is_static_path
    redirect scheme https if is_secure

#---------------------------------------------------------------------
# Frontend for HTTPS traffic with SSL termination
#---------------------------------------------------------------------
frontend https-in
    bind *:443 ssl crt /haproxy/certs/website.com.pem
    mode http
    log global
    option httplog
    option forwardfor
    default_backend web-servers

    # ACLs for HTTPS traffic
    acl is_secure_api hdr_sub(Host) -i api.website.com
    acl is_secure_static hdr_sub(Host) -i static.website.com

    use_backend secure-api-servers if is_secure_api
    use_backend secure-static-servers if is_secure_static

#---------------------------------------------------------------------
# Backends for web servers
#---------------------------------------------------------------------
backend web-servers
    mode http
    balance roundrobin
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    server web1 192.168.1.101:80 check
    server web2 192.168.1.102:80 check
    server web3 192.168.1.103:80 check

#---------------------------------------------------------------------
# Backends for API servers
#---------------------------------------------------------------------
backend api-servers
    mode http
    balance leastconn
    option httpchk HEAD /health HTTP/1.1\r\nHost:api.website.com
    server api1 192.168.1.201:80 check
    server api2 192.168.1.202:80 check

backend secure-api-servers
    mode http
    balance leastconn
    option httpchk HEAD /health HTTP/1.1\r\nHost:api.website.com
    server api1-secure 192.168.1.201:443 ssl verify none check
    server api2-secure 192.168.1.202:443 ssl verify none check

#---------------------------------------------------------------------
# Backends for Static servers (serving assets)
#---------------------------------------------------------------------
backend static-servers
    mode http
    balance roundrobin
    option httpchk HEAD /static/test.png HTTP/1.1\r\nHost:static.website.com
    server static1 192.168.1.301:80 check
    server static2 192.168.1.302:80 check

backend secure-static-servers
    mode http
    balance roundrobin
    option httpchk HEAD /static/test.png HTTP/1.1\r\nHost:static.website.com
    server static1-secure 192.168.1.301:443 ssl verify none check
    server static2-secure 192.168.1.302:443 ssl verify none check

#---------------------------------------------------------------------
# Backend for admin statistics interface
#---------------------------------------------------------------------
backend stats
    mode http
    stats enable
    stats hide-version
    stats uri /haproxy?stats
    stats refresh 10s
    stats show-node
    stats auth admin:admin123

#---------------------------------------------------------------------
# Health check and failover configuration for critical services
#---------------------------------------------------------------------
backend critical-service
    mode http
    balance roundrobin
    option httpchk HEAD /status HTTP/1.1\r\nHost:critical.website.com
    option log-health-checks
    server critical1 192.168.1.401:80 check inter 5000 fall 3 rise 2
    server critical2 192.168.1.402:80 check inter 5000 fall 3 rise 2

#---------------------------------------------------------------------
# Error page configuration
#---------------------------------------------------------------------
backend error
    mode http
    errorfile 400 /haproxy/errors/400.http
    errorfile 403 /haproxy/errors/403.http
    errorfile 408 /haproxy/errors/408.http
    errorfile 500 /haproxy/errors/500.http
    errorfile 502 /haproxy/errors/502.http
    errorfile 503 /haproxy/errors/503.http
    errorfile 504 /haproxy/errors/504.http

#---------------------------------------------------------------------
# Logging and Debug
#---------------------------------------------------------------------
backend debug-logging
    mode http
    option httplog
    log global
    server debug 127.0.0.1:8000